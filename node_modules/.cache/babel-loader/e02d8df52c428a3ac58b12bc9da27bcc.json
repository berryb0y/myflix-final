{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\OneDrive\\\\Documents\\\\GitHub\\\\myflix-final\\\\src\\\\components\\\\login-view\\\\login-view.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import { Form, FormGroup, Button, Row, Col, Container } from 'react-bootstrap/Form';\n\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LoginView(props) {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState(''); //declare hook for each input\n\n  const [usernameErr, setUsernameErr] = useState('');\n  const [passwordErr, setPasswordErr] = useState(''); //validate user inputs\n\n  const validate = () => {\n    let isReq = true;\n\n    if (!username) {\n      setUsernameErr('Username Required');\n      isReq = false;\n    } else if (username.length < 2) {\n      setUsernameErr('Username must be at least 2 characters long');\n      isReq = false;\n    }\n\n    if (!password) {\n      setPasswordErr('Password Required');\n      isReq = false;\n    } else if (password.length < 6) {\n      setPasswordErr('Password must be at least 6 characters long');\n      isReq = false;\n    }\n\n    return isReq;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isReq = validate();\n\n    if (isReq) {\n      //send request to server for authentication\n      axios.post('https://berry-node-api.herokuapp.com/login', {\n        Username: username,\n        Password: password\n      }).then(response => {\n        const data = response.data;\n        props.onLoggedIn(data);\n      }).catch(e => {\n        console.log('no such user');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form-login\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formUsername\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), usernameErr && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: usernameErr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), passwordErr && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: passwordErr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginView, \"bu3RTtfm4zH8nbQBLPx5pzN3ays=\");\n\n_c = LoginView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"names":["React","useState","axios","Form","Button","LoginView","props","username","setUsername","password","setPassword","usernameErr","setUsernameErr","passwordErr","setPasswordErr","validate","isReq","length","handleSubmit","e","preventDefault","post","Username","Password","then","response","data","onLoggedIn","catch","console","log","target","value"],"sources":["C:/Users/Andrew/OneDrive/Documents/GitHub/myflix-final/src/components/login-view/login-view.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n// import { Form, FormGroup, Button, Row, Col, Container } from 'react-bootstrap/Form';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport function LoginView(props) {\r\n    const [ username, setUsername ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n    //declare hook for each input\r\n    const [ usernameErr, setUsernameErr ] = useState('');\r\n    const [ passwordErr, setPasswordErr ] = useState('');\r\n\r\n    //validate user inputs\r\n    const validate = () => {\r\n      let isReq = true;\r\n      if(!username){\r\n        setUsernameErr('Username Required');\r\n        isReq = false;\r\n      }else if(username.length < 2){\r\n        setUsernameErr('Username must be at least 2 characters long');\r\n        isReq = false;\r\n      }\r\n      if(!password){\r\n        setPasswordErr('Password Required');\r\n        isReq = false;\r\n      }else if(password.length < 6){\r\n        setPasswordErr('Password must be at least 6 characters long');\r\n        isReq = false;\r\n      }\r\n\r\n      return isReq\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isReq = validate();\r\n        if (isReq) {\r\n          //send request to server for authentication\r\n        axios.post('https://berry-node-api.herokuapp.com/login', {\r\n            Username: username,\r\n            Password: password\r\n          })\r\n            .then(response => {\r\n              const data = response.data;\r\n              props.onLoggedIn(data);\r\n            })\r\n            .catch(e => {\r\n              console.log('no such user')\r\n            });\r\n        }\r\n      };\r\n\r\n    return (\r\n        <Form className=\"form-login\">\r\n            {/* <img src='img/banner.png'></img> */}\r\n            <Form.Group controlId=\"formUsername\">\r\n                <Form.Label>Username:</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={e => setUsername(e.target.value)} />\r\n                {/* displays validation error */}\r\n                {usernameErr && <p>{usernameErr}</p>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formPassword\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                {/* displays validation error */}\r\n                {passwordErr && <p>{passwordErr}</p>}\r\n            </Form.Group>\r\n            <br></br>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n        </Form>\r\n    )\r\n    \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}