{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\OneDrive\\\\Documents\\\\GitHub\\\\myflix-final\\\\src\\\\components\\\\main-view\\\\main-view.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Redirect } from 'react-router'; // #0\n\nimport { setMovies } from '../../actions/actions';\nimport MoviesList from '../movies-list/movies-list';\nimport { RegistrationView } from '../registration-view/registration-view';\nimport { LoginView } from '../login-view/login-view'; // 6/16 import { MovieCard } from '../movie-card/movie-card';\n\nimport { MovieView } from '../movie-view/movie-view';\nimport { Menubar } from '../navbar/navbar';\nimport { GenreView } from '../genre-view/genre-view';\nimport { DirectorView } from '../director-view/director-view';\nimport { Col, Row } from 'react-bootstrap';\nimport { ProfileView } from '../profile-view/profile-view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainView extends React.Component {\n  constructor() {\n    super(); //initial state set to null\n\n    this.state = {\n      user: null\n    };\n  }\n\n  componentDidMount() {\n    let accessToken = localStorage.getItem('token');\n\n    if (accessToken !== null) {\n      this.setState({\n        user: localStorage.getItem('user')\n      });\n      this.getMovies(accessToken);\n    }\n  } //when a movie is clicked, this function updates the state of the selected movie property to that movie\n\n\n  setSelectedMovie(movie) {\n    this.setState({\n      selectedMovie: movie\n    });\n  } //https://dashboard.heroku.com/apps/berry-node-api\n\n\n  getMovies(token) {\n    axios.get('https://berry-node-api.herokuapp.com/movies', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      // Assign the result to the state\n      // 6/16 this.setState({\n      //   movies: response.data\n      // });\n      this.props.setMovies(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } //when a user successfully logs in, this function updates the user property in state to that specific user\n\n\n  onLoggedIn(authData) {\n    console.log(authData);\n    this.setState({\n      user: authData.user.Username\n    });\n    localStorage.setItem('token', authData.token);\n    localStorage.setItem('user', authData.user.Username);\n    this.getMovies(authData.token);\n  } //function to log out \n\n\n  onLoggedOut() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.setState({\n      user: null\n    });\n  }\n\n  render() {\n    // 6/16 const { movies, user } = this.state;\n    let {\n      movies\n    } = this.props;\n    let {\n      user\n    } = this.state; //if no user, the login view will render, if logged in, user details are passed as a prop to the LoginView\n    // if (!user) return \n    // <Row>\n    //   <Col>\n    //   <LoginView onLoggedIn={user => this.onLoggedIn(user)} />;\n    //   </Col>\n    // </Row>\n    //before movies have been loaded\n    // if (movies.length === 0) return <div className=\"main-view\"></div>;\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"main-view justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => {\n            // if (!user) return <Col>\n            //   <LoginView onLoggedIn={user => this.onLoggedIn(user)} />\n            //   </Col>\n            // if (movies.length === 0) return <div className=\"main-view\"></div>\n            return /*#__PURE__*/_jsxDEV(MoviesList, {\n              movies: movies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 24\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          render: () => {\n            if (user) return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 34\n            }, this);\n            return /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(RegistrationView, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 24\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies/:movieId\",\n          render: _ref => {\n            let {\n              match,\n              history\n            } = _ref;\n            if (!user) return /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(LoginView, {\n                onLoggedIn: user => this.onLoggedIn(user)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 35\n            }, this);\n            if (movies.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"main-view\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 49\n            }, this);\n            return /*#__PURE__*/_jsxDEV(Col, {\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(MovieView, {\n                movie: movies.find(m => m._id === match.params.movieId),\n                onBackClick: () => history.goBack()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 24\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/directors/:name\",\n          render: _ref2 => {\n            let {\n              match,\n              history\n            } = _ref2;\n            if (!user) return /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(LoginView, {\n                onLoggedIn: user => this.onLoggedIn(user)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 35\n            }, this);\n            if (movies.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"main-view\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 49\n            }, this);\n            return /*#__PURE__*/_jsxDEV(Col, {\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(DirectorView, {\n                director: movies.find(m => m.Director.Name === match.params.name).Director,\n                onBackClick: () => history.goBack()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 24\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/genres/:name\",\n          render: _ref3 => {\n            let {\n              match,\n              history\n            } = _ref3;\n            if (!user) return /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(LoginView, {\n                onLoggedIn: user => this.onLoggedIn(user)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 35\n            }, this);\n            if (movies.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"main-view\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 49\n            }, this);\n            return /*#__PURE__*/_jsxDEV(Col, {\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(GenreView, {\n                Genre: movies.find(m => m.Genre.Name === match.params.name).Genre,\n                onBackClick: () => history.goBack()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 24\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `users/${user}`,\n          render: _ref4 => {\n            let {\n              history\n            } = _ref4;\n            if (!user) return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 35\n            }, this);\n            return /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ProfileView, {\n                user: user,\n                onBackClick: () => history.goBack()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 24\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    movies: state.movies\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setMovies\n})(MainView); // 6/16 export default MainView;","map":{"version":3,"names":["React","axios","connect","BrowserRouter","Router","Route","Redirect","setMovies","MoviesList","RegistrationView","LoginView","MovieView","Menubar","GenreView","DirectorView","Col","Row","ProfileView","MainView","Component","constructor","state","user","componentDidMount","accessToken","localStorage","getItem","setState","getMovies","setSelectedMovie","movie","selectedMovie","token","get","headers","Authorization","then","response","props","data","catch","error","console","log","onLoggedIn","authData","Username","setItem","onLoggedOut","removeItem","render","movies","match","history","length","find","m","_id","params","movieId","goBack","Director","Name","name","Genre","mapStateToProps"],"sources":["C:/Users/Andrew/OneDrive/Documents/GitHub/myflix-final/src/components/main-view/main-view.jsx"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\n\r\n// #0\r\nimport { setMovies } from '../../actions/actions';\r\nimport MoviesList from '../movies-list/movies-list';\r\nimport { RegistrationView } from '../registration-view/registration-view';\r\nimport { LoginView } from '../login-view/login-view';\r\n// 6/16 import { MovieCard } from '../movie-card/movie-card';\r\nimport { MovieView } from '../movie-view/movie-view';\r\nimport { Menubar } from '../navbar/navbar';\r\nimport { GenreView } from '../genre-view/genre-view';\r\nimport { DirectorView } from '../director-view/director-view';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { ProfileView } from '../profile-view/profile-view'\r\n\r\nclass MainView extends React.Component {\r\n\r\n  constructor(){\r\n      super();\r\n      //initial state set to null\r\n      this.state = {\r\n          user: null\r\n      };\r\n  }\r\n\r\n  componentDidMount(){\r\n    let accessToken = localStorage.getItem('token');\r\n    if (accessToken !==  null) {\r\n      this.setState({\r\n        user: localStorage.getItem('user')\r\n      });\r\n      this.getMovies(accessToken);\r\n    }\r\n  }\r\n\r\n    //when a movie is clicked, this function updates the state of the selected movie property to that movie\r\n  setSelectedMovie(movie) {\r\n    this.setState({\r\n        selectedMovie: movie\r\n    });\r\n  }\r\n\r\n  //https://dashboard.heroku.com/apps/berry-node-api\r\n  getMovies(token) {\r\n    axios.get('https://berry-node-api.herokuapp.com/movies', {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n    .then(response => {\r\n      // Assign the result to the state\r\n\r\n      // 6/16 this.setState({\r\n      //   movies: response.data\r\n      // });\r\n      this.props.setMovies(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n    \r\n\r\n\r\n\r\n    //when a user successfully logs in, this function updates the user property in state to that specific user\r\n    onLoggedIn(authData) {\r\n      console.log(authData);\r\n        this.setState({\r\n            user: authData.user.Username\r\n        });\r\n\r\n        localStorage.setItem('token', authData.token);\r\n        localStorage.setItem('user', authData.user.Username);\r\n        this.getMovies(authData.token);\r\n    }\r\n\r\n    //function to log out \r\n    onLoggedOut() {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      this.setState({\r\n        user: null\r\n      });\r\n    }\r\n\r\n    render() {\r\n        // 6/16 const { movies, user } = this.state;\r\n\r\n        let { movies } = this.props;\r\n        let { user } = this.state;\r\n\r\n        //if no user, the login view will render, if logged in, user details are passed as a prop to the LoginView\r\n        // if (!user) return \r\n        // <Row>\r\n        //   <Col>\r\n        //   <LoginView onLoggedIn={user => this.onLoggedIn(user)} />;\r\n        //   </Col>\r\n        // </Row>\r\n\r\n        //before movies have been loaded\r\n        // if (movies.length === 0) return <div className=\"main-view\"></div>;\r\n\r\n        return (\r\n          <Router>\r\n            <Row className=\"main-view justify-content-md-center\">\r\n              <Route exact path=\"/\" render={() => {\r\n                // if (!user) return <Col>\r\n                //   <LoginView onLoggedIn={user => this.onLoggedIn(user)} />\r\n                //   </Col>\r\n                // if (movies.length === 0) return <div className=\"main-view\"></div>\r\n                return <MoviesList movies={movies}/>;\r\n              }} />\r\n              <Route path=\"/register\" render={() => {\r\n                if (user) return <Redirect to=\"/\" />\r\n                return <Col>\r\n                  <RegistrationView />\r\n                </Col>\r\n              }} />\r\n              <Route path=\"/movies/:movieId\" render={({ match, history }) => {\r\n                if (!user) return <Col>\r\n                <LoginView onLoggedIn={user => this.onLoggedIn(user)} />\r\n                </Col>\r\n                if (movies.length === 0) return <div className=\"main-view\" />;\r\n                return <Col md={8}>\r\n                  <MovieView movie={movies.find(m => m._id === match.params.movieId)} onBackClick={() => history.goBack()} />\r\n                </Col>\r\n                \r\n              }} />\r\n              <Route path=\"/directors/:name\" render={({ match, history }) => {\r\n                if (!user) return <Col>\r\n                <LoginView onLoggedIn={user => this.onLoggedIn(user)} />\r\n                </Col>\r\n                if (movies.length === 0) return <div className=\"main-view\" />;\r\n                return <Col md={8}>\r\n                <DirectorView director={movies.find(m => m.Director.Name === match.params.name ).Director} onBackClick={() => history.goBack()}/>\r\n                </Col>\r\n              }} />\r\n              <Route path=\"/genres/:name\" render={({ match, history }) => {\r\n                if (!user) return <Col>\r\n                <LoginView onLoggedIn={user => this.onLoggedIn(user)} />\r\n                </Col>\r\n                if (movies.length === 0) return <div className=\"main-view\" />;\r\n                return <Col md={8}>\r\n                  <GenreView Genre={movies.find(m => m.Genre.Name === match.params.name).Genre} onBackClick={() => history.goBack()} />\r\n                </Col>\r\n              }} />\r\n              <Route path={`users/${user}`} render={({history}) => {\r\n                if (!user) return <Redirect to=\"/\" />\r\n                return <Col>\r\n                <ProfileView user={user} onBackClick={() => history.goBack()}/>\r\n                </Col>\r\n              }} />\r\n              {/* <button onClick={() => { this.onLoggedOut() }}>Logout</button> */}\r\n            </Row>\r\n          </Router>\r\n        );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n  return { movies: state.movies }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setMovies } )(MainView);\r\n// 6/16 export default MainView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}