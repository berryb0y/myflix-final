{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\OneDrive\\\\Documents\\\\GitHub\\\\myflix-final\\\\src\\\\components\\\\genre-view\\\\genre-view.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Button, Col, Container, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class GenreView extends React.Component {\n  render() {\n    const {\n      Genre,\n      onBackClick\n    } = this.props;\n    console.log(\" props\", this.props);\n    console.log(Genre);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\" \", Genre === null || Genre === void 0 ? void 0 : Genre.Name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Description: \", Genre === null || Genre === void 0 ? void 0 : Genre.Description, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          onBackClick(null);\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n} // eslint-disable-next-line react/no-typos\n\nGenreView.PropTypes = {\n  genre: PropTypes.shape({\n    Name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n  }).isRequired\n};","map":{"version":3,"names":["React","PropTypes","Row","Button","Col","Container","Card","GenreView","Component","render","Genre","onBackClick","props","console","log","Name","Description","genre","shape","string","isRequired","description"],"sources":["C:/Users/Andrew/OneDrive/Documents/GitHub/myflix-final/src/components/genre-view/genre-view.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Button, Col, Container, Card } from 'react-bootstrap';\r\n\r\nexport class GenreView extends React.Component {\r\n    render() {\r\n    const { Genre, onBackClick } = this.props;\r\nconsole.log(\" props\", this.props);\r\nconsole.log(Genre);\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title> {Genre?.Name} </Card.Title>\r\n                                <Card.Text>Description: {Genre?.Description} </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                {/* <Row className=\"mt-3\">\r\n                    <Col className=\"label\">Genre: </Col>\r\n                    <Col className=\"value\">{genre.Genre.Name}</Col>\r\n                </Row>\r\n                <Row className=\"mt-3\">\r\n                    <Col className=\"label\">Description: </Col>\r\n                    <Col className=\"value\">{genre.Genre.Description}</Col>\r\n                </Row> */}\r\n                <Button onClick={() => { onBackClick(null); }}>Back</Button>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line react/no-typos\r\nGenreView.PropTypes = {\r\n    genre: PropTypes.shape({\r\n        Name: PropTypes.string.isRequired,\r\n        description: PropTypes.string.isRequired\r\n    }).isRequired\r\n};"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,SAA3B,EAAsCC,IAAtC,QAAkD,iBAAlD;;AAEA,OAAO,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;EAC3CC,MAAM,GAAG;IACT,MAAM;MAAEC,KAAF;MAASC;IAAT,IAAyB,KAAKC,KAApC;IACJC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKF,KAA3B;IACAC,OAAO,CAACC,GAAR,CAAYJ,KAAZ;IACQ,oBACI,QAAC,SAAD;MAAA,wBACI,QAAC,GAAD;QAAA,uBACI,QAAC,GAAD;UAAA,uBACI,QAAC,IAAD;YAAA,uBACI,QAAC,IAAD,CAAM,IAAN;cAAA,wBACI,QAAC,IAAD,CAAM,KAAN;gBAAA,gBAAcA,KAAd,aAAcA,KAAd,uBAAcA,KAAK,CAAEK,IAArB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI,QAAC,IAAD,CAAM,IAAN;gBAAA,4BAAyBL,KAAzB,aAAyBA,KAAzB,uBAAyBA,KAAK,CAAEM,WAAhC;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAmBI,QAAC,MAAD;QAAQ,OAAO,EAAE,MAAM;UAAEL,WAAW,CAAC,IAAD,CAAX;QAAoB,CAA7C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAnBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAuBH;;AA5B0C,C,CA+B/C;;AACAJ,SAAS,CAACN,SAAV,GAAsB;EAClBgB,KAAK,EAAEhB,SAAS,CAACiB,KAAV,CAAgB;IACnBH,IAAI,EAAEd,SAAS,CAACkB,MAAV,CAAiBC,UADJ;IAEnBC,WAAW,EAAEpB,SAAS,CAACkB,MAAV,CAAiBC;EAFX,CAAhB,EAGJA;AAJe,CAAtB"},"metadata":{},"sourceType":"module"}