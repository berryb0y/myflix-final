{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\OneDrive\\\\Documents\\\\GitHub\\\\myflix-final\\\\src\\\\components\\\\director-view\\\\director-view.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Button, Col, Container, Card } from 'react-bootstrap';\nimport './director-view.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DirectorView extends React.Component {\n  render() {\n    const {\n      director,\n      onBackClick\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\" \", director === null || director === void 0 ? void 0 : director.Name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Born: \", director === null || director === void 0 ? void 0 : director.Birth, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"About: \", director === null || director === void 0 ? void 0 : director.Bio, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          onBackClick(null);\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nDirectorView.propTypes = {\n  director: PropTypes.shape({\n    Name: PropTypes.string.isRequired,\n    Bio: PropTypes.string.isRequired,\n    Birth: PropTypes.string.isRequired\n  }).isRequired,\n  onBackClick: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","PropTypes","Row","Button","Col","Container","Card","DirectorView","Component","render","director","onBackClick","props","Name","Birth","Bio","propTypes","shape","string","isRequired","func"],"sources":["C:/Users/Andrew/OneDrive/Documents/GitHub/myflix-final/src/components/director-view/director-view.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Button, Col, Container, Card } from 'react-bootstrap';\r\n\r\nimport './director-view.scss';\r\n\r\nexport class DirectorView extends React.Component {\r\n    render() {\r\n        const { director, onBackClick } = this.props;\r\n        \r\n        return (\r\n            <Container>\r\n                <Row className=\"mt-3\">\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title> {director?.Name} </Card.Title>\r\n                                <Card.Text>Born: {director?.Birth} </Card.Text>\r\n                                <Card.Text>About: {director?.Bio} </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Button onClick={() => { onBackClick(null); }}>Back</Button>                \r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nDirectorView.propTypes = {\r\n    director: PropTypes.shape({\r\n        Name: PropTypes.string.isRequired,\r\n        Bio: PropTypes.string.isRequired,\r\n        Birth: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    onBackClick: PropTypes.func.isRequired\r\n};"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,SAA3B,EAAsCC,IAAtC,QAAkD,iBAAlD;AAEA,OAAO,sBAAP;;AAEA,OAAO,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;EAC9CC,MAAM,GAAG;IACL,MAAM;MAAEC,QAAF;MAAYC;IAAZ,IAA4B,KAAKC,KAAvC;IAEA,oBACI,QAAC,SAAD;MAAA,wBACI,QAAC,GAAD;QAAK,SAAS,EAAC,MAAf;QAAA,uBACI,QAAC,GAAD;UAAA,uBACI,QAAC,IAAD;YAAA,uBACI,QAAC,IAAD,CAAM,IAAN;cAAA,wBACI,QAAC,IAAD,CAAM,KAAN;gBAAA,gBAAcF,QAAd,aAAcA,QAAd,uBAAcA,QAAQ,CAAEG,IAAxB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI,QAAC,IAAD,CAAM,IAAN;gBAAA,qBAAkBH,QAAlB,aAAkBA,QAAlB,uBAAkBA,QAAQ,CAAEI,KAA5B;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;gBAAA,sBAAmBJ,QAAnB,aAAmBA,QAAnB,uBAAmBA,QAAQ,CAAEK,GAA7B;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAHJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAYI,QAAC,MAAD;QAAQ,OAAO,EAAE,MAAM;UAAEJ,WAAW,CAAC,IAAD,CAAX;QAAoB,CAA7C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAgBH;;AApB6C;AAuBlDJ,YAAY,CAACS,SAAb,GAAyB;EACrBN,QAAQ,EAAET,SAAS,CAACgB,KAAV,CAAgB;IACtBJ,IAAI,EAAEZ,SAAS,CAACiB,MAAV,CAAiBC,UADD;IAEtBJ,GAAG,EAAEd,SAAS,CAACiB,MAAV,CAAiBC,UAFA;IAGtBL,KAAK,EAAEb,SAAS,CAACiB,MAAV,CAAiBC;EAHF,CAAhB,EAIPA,UALkB;EAMrBR,WAAW,EAAEV,SAAS,CAACmB,IAAV,CAAeD;AANP,CAAzB"},"metadata":{},"sourceType":"module"}